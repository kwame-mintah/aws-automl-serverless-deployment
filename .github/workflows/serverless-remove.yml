name: "ðŸ’¥ Serverless remove resources"

permissions:
  contents: read

on:
  workflow_dispatch:

env:
  AWS_REGION: "${{ secrets.AWS_REGION }}"
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

jobs:
  remove:
    name: "remove"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        serverless-stage: [dev]
    steps:
      - name: "Checkout"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: "Curl latest lambda tags"
        id: "lambda-verions"
        run: |
          echo "DATA_PREPROCESSING_VERSION=$(curl -sL https://api.github.com/repos/kwame-mintah/aws-lambda-data-preprocessing/tags | jq -r ".[0].name")" >> "$GITHUB_OUTPUT"
          echo "MODEL_TRAINING_VERSION=$(curl -sL https://api.github.com/repos/kwame-mintah/aws-lambda-model-training/tags | jq -r ".[0].name")" >> "$GITHUB_OUTPUT"
          echo "MODEL_DEPLOYMENT_VERSION=$(curl -sL https://api.github.com/repos/kwame-mintah/aws-lambda-model-deployment/tags | jq -r ".[0].name")" >> "$GITHUB_OUTPUT"

      - name: "Serverless remove"
        uses: serverless/github-action@189dd6854a3b12ecff4a02c49351779f919933ca
        with:
          args: -c "serverless plugin install --name serverless-iam-roles-per-function && serverless remove --stage ${{ matrix.serverless-stage }}"
          entrypoint: /bin/sh
        env:
          DATA_PREPROCESSING_VERSION: ${{ steps.lambda-verions.outputs.DATA_PREPROCESSING_VERSION }}
          MODEL_TRAINING_VERSION: ${{ steps.lambda-verions.outputs.MODEL_TRAINING_VERSION }}
          MODEL_DEPLOYMENT_VERSION: ${{ steps.lambda-verions.outputs.MODEL_DEPLOYMENT_VERSION }}
